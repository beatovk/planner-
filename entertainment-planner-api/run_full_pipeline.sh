#!/bin/bash

# üöÄ –ü–æ–ª–Ω—ã–π –ø–∞–π–ø–ª–∞–π–Ω –æ–±—Ä–∞–±–æ—Ç–∫–∏ –º–µ—Å—Ç Entertainment Planner
# –ê–≤—Ç–æ—Ä: AI Assistant
# –î–∞—Ç–∞: 2025-09-21

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ

echo "üöÄ –ó–ê–ü–£–°–ö –ü–û–õ–ù–û–ì–û –ü–ê–ô–ü–õ–ê–ô–ù–ê –û–ë–†–ê–ë–û–¢–ö–ò –ú–ï–°–¢"
echo "=============================================="

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è
if [ ! -f ".env" ]; then
    echo "‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    exit 1
fi

# –ê–∫—Ç–∏–≤–∞—Ü–∏—è –æ–∫—Ä—É–∂–µ–Ω–∏—è
echo "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
source ../venv/bin/activate
export $(cat .env | xargs)

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
echo "üóÑÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
python -c "
from apps.core.db import SessionLocal
from apps.places.models import Place
from sqlalchemy import func

db = SessionLocal()
try:
    statuses = db.query(Place.processing_status, func.count(Place.id)).group_by(Place.processing_status).all()
    print('üìä –¢–ï–ö–£–©–ò–ï –°–¢–ê–¢–£–°–´ –ú–ï–°–¢:')
    for status, count in statuses:
        print(f'  {status}: {count}')
    
    new_count = db.query(Place).filter(Place.processing_status == 'new').count()
    print(f'\\nüÜï –ù–æ–≤—ã—Ö –º–µ—Å—Ç –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏: {new_count}')
    
    if new_count == 0:
        print('‚úÖ –ù–µ—Ç –Ω–æ–≤—ã—Ö –º–µ—Å—Ç –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏')
        exit(0)
finally:
    db.close()
"

# –®–∞–≥ 1: GPT Worker
echo ""
echo "ü§ñ –®–ê–ì 1: –ó–∞–ø—É—Å–∫ GPT Worker..."
echo "================================"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞–ø—É—â–µ–Ω –ª–∏ —É–∂–µ –≤–æ—Ä–∫–µ—Ä
if pgrep -f "fixed_gpt_worker.py" > /dev/null; then
    echo "‚ö†Ô∏è GPT Worker —É–∂–µ –∑–∞–ø—É—â–µ–Ω. –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º..."
    pkill -f "fixed_gpt_worker.py"
    sleep 2
fi

# –ó–∞–ø—É—Å–∫–∞–µ–º GPT Worker –≤ —Ñ–æ–Ω–µ
echo "üîÑ –ó–∞–ø—É—Å–∫ GPT Worker –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ..."
nohup python fixed_gpt_worker.py > gpt_worker.log 2>&1 &
GPT_PID=$!
echo "üìù GPT Worker –∑–∞–ø—É—â–µ–Ω (PID: $GPT_PID)"

# –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è GPT –æ–±—Ä–∞–±–æ—Ç–∫–∏
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è GPT –æ–±—Ä–∞–±–æ—Ç–∫–∏..."
while true; do
    NEW_COUNT=$(python -c "
from apps.core.db import SessionLocal
from apps.places.models import Place
db = SessionLocal()
try:
    count = db.query(Place).filter(Place.processing_status == 'new').count()
    print(count)
finally:
    db.close()
")
    
    if [ "$NEW_COUNT" -eq 0 ]; then
        echo "‚úÖ GPT –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
        break
    fi
    
    echo "üîÑ –û—Å—Ç–∞–ª–æ—Å—å –Ω–æ–≤—ã—Ö –º–µ—Å—Ç: $NEW_COUNT"
    sleep 10
done

# –®–∞–≥ 2: Google Enrichment
echo ""
echo "üîç –®–ê–ì 2: –ó–∞–ø—É—Å–∫ Google Enrichment Agent..."
echo "============================================="

echo "üîÑ –ó–∞–ø—É—Å–∫ Google –æ–±–æ–≥–∞—â–µ–Ω–∏—è..."
python enhanced_google_enrichment_agent.py

# –®–∞–≥ 3: –ü—É–±–ª–∏–∫–∞—Ü–∏—è
echo ""
echo "üì∞ –®–ê–ì 3: –ü—É–±–ª–∏–∫–∞—Ü–∏—è –≥–æ—Ç–æ–≤—ã—Ö –º–µ—Å—Ç..."
echo "====================================="

python -c "
from apps.core.db import SessionLocal
from apps.places.models import Place
from sqlalchemy import func
from datetime import datetime, timezone

db = SessionLocal()
try:
    # –ü–µ—Ä–µ–≤–æ–¥–∏–º –º–µ—Å—Ç–∞ —Å —Å–∞–º–º–∞—Ä–∏ –∏ Google –¥–∞–Ω–Ω—ã–º–∏ –≤ published
    places_to_publish = db.query(Place).filter(
        Place.processing_status == 'enriched',
        Place.summary.isnot(None),
        Place.lat.isnot(None),
        Place.lng.isnot(None)
    ).count()
    
    print(f'üìù –ú–µ—Å—Ç –≥–æ—Ç–æ–≤—ã—Ö –∫ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: {places_to_publish}')
    
    if places_to_publish > 0:
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
        db.query(Place).filter(
            Place.processing_status == 'enriched',
            Place.summary.isnot(None),
            Place.lat.isnot(None),
            Place.lng.isnot(None)
        ).update({
            'processing_status': 'published',
            'published_at': datetime.now(timezone.utc)
        })
        db.commit()
        print(f'‚úÖ –û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ {places_to_publish} –º–µ—Å—Ç!')
    else:
        print('‚ö†Ô∏è –ù–µ—Ç –º–µ—Å—Ç –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏')
    
    # –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    final_statuses = db.query(Place.processing_status, func.count(Place.id)).group_by(Place.processing_status).all()
    print(f'\\nüéØ –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:')
    for status, count in final_statuses:
        print(f'  {status}: {count}')
        
finally:
    db.close()
"

echo ""
echo "üéâ –ü–ê–ô–ü–õ–ê–ô–ù –ó–ê–í–ï–†–®–ï–ù –£–°–ü–ï–®–ù–û!"
echo "=============================="
echo "üìä –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∏–Ω–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≤—ã—à–µ"
echo "üìù –õ–æ–≥–∏ GPT Worker: gpt_worker.log"
echo "üîç –õ–æ–≥–∏ Google Enrichment: –≤—ã–≤–æ–¥—è—Ç—Å—è –≤ –∫–æ–Ω—Å–æ–ª—å"
