#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∏ –≤—Å–µ—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —Å –Ω–æ–≤—ã–º –∞–ª–≥–æ—Ä–∏—Ç–º–æ–º
"""

import os
import sys
import logging
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from apps.core.db import SessionLocal
from apps.places.models import Place
from apps.places.workers.ai_editor import AIEditorAgent

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)


def rebuild_all_photos():
    """–ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –≤—Å–µ—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    logger.info("üîÑ –ù–∞—á–∏–Ω–∞–µ–º –ø–µ—Ä–µ—Å–±–æ—Ä–∫—É –≤—Å–µ—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
    
    db = SessionLocal()
    try:
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –º–µ—Å—Ç–∞ —Å Google Place ID (–∏—Å–∫–ª—é—á–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ)
        places = db.query(Place).filter(
            Place.gmaps_place_id.isnot(None),
            Place.gmaps_place_id != 'mock_place_1705'
        ).all()
        
        total_places = len(places)
        logger.info(f"üìä –ù–∞–π–¥–µ–Ω–æ {total_places} –º–µ—Å—Ç –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏")
        
        if total_places == 0:
            logger.warning("‚ùå –ù–µ—Ç –º–µ—Å—Ç –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏")
            return
        
        # –°–æ–∑–¥–∞–µ–º AI Editor Agent
        agent = AIEditorAgent()
        
        processed_count = 0
        success_count = 0
        error_count = 0
        
        for i, place in enumerate(places, 1):
            logger.info(f"\n--- –û–±—Ä–∞–±–æ—Ç–∫–∞ {i}/{total_places}: {place.name} ---")
            logger.info(f"Google Place ID: {place.gmaps_place_id}")
            
            try:
                # –ü–æ–ª—É—á–∞–µ–º –Ω–æ–≤—É—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º –∞–ª–≥–æ—Ä–∏—Ç–º–æ–º
                new_photo_url = agent._search_real_place_images(place)
                
                if new_photo_url:
                    # –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
                    place.picture_url = new_photo_url
                    place.updated_at = datetime.now()
                    
                    # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ AI-–∞–≥–µ–Ω—Ç–∞
                    place.ai_verified = 'true'
                    place.ai_verification_date = datetime.now()
                    place.ai_verification_data = f'{{"photo_updated": true, "photo_url": "{new_photo_url}", "algorithm": "improved_photo_selection"}}'
                    
                    db.commit()
                    
                    success_count += 1
                    logger.info(f"‚úÖ –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞: {new_photo_url[:50]}...")
                else:
                    error_count += 1
                    logger.warning(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –¥–ª—è {place.name}")
                
                processed_count += 1
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –∫–∞–∂–¥—ã–µ 10 –º–µ—Å—Ç
                if i % 10 == 0:
                    logger.info(f"üìà –ü—Ä–æ–≥—Ä–µ—Å—Å: {i}/{total_places} ({i/total_places*100:.1f}%)")
                
            except Exception as e:
                error_count += 1
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ {place.name}: {e}")
                continue
        
        # –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        logger.info(f"\n{'='*60}")
        logger.info("üìà –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–ï–†–ï–°–ë–û–†–ö–ò")
        logger.info(f"{'='*60}")
        logger.info(f"–í—Å–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {processed_count}")
        logger.info(f"–£—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ: {success_count}")
        logger.info(f"–û—à–∏–±–æ–∫: {error_count}")
        logger.info(f"–ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—Ö–∞: {success_count/processed_count*100:.1f}%")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
        logger.info(f"\n–ü—Ä–∏–º–µ—Ä—ã –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π:")
        updated_places = db.query(Place).filter(
            Place.ai_verification_data.like('%photo_updated%')
        ).order_by(Place.updated_at.desc()).limit(5).all()
        
        for place in updated_places:
            logger.info(f"  {place.name}: {place.picture_url[:50]}...")
        
    except Exception as e:
        logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        db.rollback()
    finally:
        db.close()


def test_photo_quality():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞—á–µ—Å—Ç–≤–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π"""
    logger.info("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞—á–µ—Å—Ç–≤–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π")
    
    db = SessionLocal()
    try:
        # –ü–æ–ª—É—á–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –º–µ—Å—Ç
        places = db.query(Place).filter(
            Place.ai_verification_data.like('%photo_updated%')
        ).limit(5).all()
        
        for place in places:
            logger.info(f"\n--- {place.name} ---")
            logger.info(f"–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è: {place.picture_url}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—á–µ—Å—Ç–≤–æ URL
            if 'googleusercontent.com' in place.picture_url:
                logger.info("‚úÖ –ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–∞—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è Google Places")
            elif 'unsplash.com' in place.picture_url:
                logger.info("‚ö†Ô∏è  –ó–∞–≥–ª—É—à–∫–∞ Unsplash")
            else:
                logger.info("‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫")
    
    finally:
        db.close()


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    logger.info("üéØ –ó–∞–ø—É—Å–∫ –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∏ –≤—Å–µ—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π")
    
    # –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
    rebuild_all_photos()
    
    # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞—á–µ—Å—Ç–≤–∞
    test_photo_quality()


if __name__ == "__main__":
    main()
