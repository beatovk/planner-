#!/usr/bin/env python3
"""
–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–µ—Ä–µ—Å–±–æ—Ä–∞ –≤—Å–µ—Ö –æ–ø–∏—Å–∞–Ω–∏–π –∏–∑ BK Magazine —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º –∞–ª–≥–æ—Ä–∏—Ç–º–æ–º
"""
import sys
import os
sys.path.append(os.path.dirname(os.path.dirname(os.path.dirname(__file__))))

from apps.core.db import SessionLocal
from apps.places.models import Place
from apps.places.ingestion.bk_magazine_adapter import BKMagazineAdapter
from sqlalchemy import func
import logging

logger = logging.getLogger(__name__)

def rebuild_bk_descriptions():
    """–ü–µ—Ä–µ—Å–æ–±–∏—Ä–∞–µ—Ç –≤—Å–µ –æ–ø–∏—Å–∞–Ω–∏—è –∏–∑ BK Magazine —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º –∞–ª–≥–æ—Ä–∏—Ç–º–æ–º"""
    print("üîÑ –ü–ï–†–ï–°–ë–û–† –û–ü–ò–°–ê–ù–ò–ô –ò–ó BK MAGAZINE")
    print("=" * 60)
    
    db = SessionLocal()
    adapter = BKMagazineAdapter()
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –º–µ—Å—Ç–∞ –∏–∑ BK Magazine
        bk_places = db.query(Place).filter(Place.source == 'bk_magazine').all()
        print(f"–ù–∞–π–¥–µ–Ω–æ –º–µ—Å—Ç –∏–∑ BK Magazine: {len(bk_places)}")
        
        # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ —Å—Ç–∞—Ç—å—è–º
        articles = {}
        for place in bk_places:
            if place.source_url:
                article_url = place.source_url.split('#')[0]  # –£–±–∏—Ä–∞–µ–º —è–∫–æ—Ä—å
                if article_url not in articles:
                    articles[article_url] = []
                articles[article_url].append(place)
        
        print(f"–ù–∞–π–¥–µ–Ω–æ —Å—Ç–∞—Ç–µ–π: {len(articles)}")
        
        total_updated = 0
        total_errors = 0
        
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥—É—é —Å—Ç–∞—Ç—å—é
        for i, (article_url, places) in enumerate(articles.items(), 1):
            print(f"\nüì∞ –°–¢–ê–¢–¨–Ø {i}: {article_url.split('/')[-1]}")
            print("-" * 50)
            
            try:
                # –ü–∞—Ä—Å–∏–º —Å—Ç–∞—Ç—å—é –∑–∞–Ω–æ–≤–æ —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º –∞–ª–≥–æ—Ä–∏—Ç–º–æ–º
                new_places = adapter.parse_article_page(article_url)
                print(f"   –ü–∞—Ä—Å–∏–Ω–≥: –Ω–∞–π–¥–µ–Ω–æ {len(new_places)} –º–µ—Å—Ç")
                
                # –°–æ–∑–¥–∞–µ–º —Å–ª–æ–≤–∞—Ä—å –Ω–æ–≤—ã—Ö –º–µ—Å—Ç –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—è–º
                new_places_dict = {p['title']: p for p in new_places}
                
                # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –º–µ—Å—Ç–∞
                updated_count = 0
                for place in places:
                    place_name = place.name
                    if place_name in new_places_dict:
                        new_place = new_places_dict[place_name]
                        
                        # –û–±–Ω–æ–≤–ª—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ
                        old_description = place.description_full
                        new_description = new_place['teaser']
                        
                        if new_description and len(new_description) > 50:
                            place.description_full = new_description
                            place.processing_status = "new"  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –¥–ª—è –ø–µ—Ä–µ–æ–±—Ä–∞–±–æ—Ç–∫–∏
                            updated_count += 1
                            
                            # –õ–æ–≥–∏—Ä—É–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
                            if old_description != new_description:
                                print(f"   ‚úÖ {place_name}: –æ–±–Ω–æ–≤–ª–µ–Ω–æ –æ–ø–∏—Å–∞–Ω–∏–µ")
                            else:
                                print(f"   ‚û°Ô∏è {place_name}: –æ–ø–∏—Å–∞–Ω–∏–µ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å")
                        else:
                            print(f"   ‚ö†Ô∏è {place_name}: –Ω–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è –≤ –Ω–æ–≤–æ–º –ø–∞—Ä—Å–∏–Ω–≥–µ")
                    else:
                        print(f"   ‚ùå {place_name}: –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –Ω–æ–≤–æ–º –ø–∞—Ä—Å–∏–Ω–≥–µ")
                
                print(f"   –û–±–Ω–æ–≤–ª–µ–Ω–æ –º–µ—Å—Ç: {updated_count}")
                total_updated += updated_count
                
            except Exception as e:
                print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å—Ç–∞—Ç—å–∏: {e}")
                total_errors += 1
                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å—Ç–∞—Ç—å–∏ {article_url}: {e}")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        db.commit()
        
        print(f"\nüìä –ò–¢–û–ì–ò –ü–ï–†–ï–°–ë–û–†–ê:")
        print(f"   –í—Å–µ–≥–æ –º–µ—Å—Ç: {len(bk_places)}")
        print(f"   –û–±–Ω–æ–≤–ª–µ–Ω–æ: {total_updated}")
        print(f"   –û—à–∏–±–æ–∫: {total_errors}")
        print(f"   –£—Å–ø–µ—à–Ω–æ—Å—Ç—å: {total_updated/len(bk_places)*100:.1f}%")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        places_with_descriptions = db.query(Place).filter(
            Place.source == 'bk_magazine',
            Place.description_full.isnot(None),
            Place.description_full != ''
        ).count()
        
        print(f"\nüìà –†–ï–ó–£–õ–¨–¢–ê–¢:")
        print(f"   –ú–µ—Å—Ç —Å –æ–ø–∏—Å–∞–Ω–∏—è–º–∏: {places_with_descriptions} ({places_with_descriptions/len(bk_places)*100:.1f}%)")
        
        if places_with_descriptions >= len(bk_places) * 0.95:
            print("   üéâ –û–¢–õ–ò–ß–ù–û! 95%+ –º–µ—Å—Ç –∏–º–µ—é—Ç –æ–ø–∏—Å–∞–Ω–∏—è!")
        elif places_with_descriptions >= len(bk_places) * 0.9:
            print("   ‚úÖ –•–û–†–û–®–û! 90%+ –º–µ—Å—Ç –∏–º–µ—é—Ç –æ–ø–∏—Å–∞–Ω–∏—è!")
        else:
            print("   ‚ö†Ô∏è –ù—É–∂–Ω–æ –µ—â–µ —É–ª—É—á—à–∏—Ç—å –∞–ª–≥–æ—Ä–∏—Ç–º")
            
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        logger.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ rebuild_bk_descriptions: {e}")
        db.rollback()
    finally:
        db.close()

if __name__ == "__main__":
    rebuild_bk_descriptions()
