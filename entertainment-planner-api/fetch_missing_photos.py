#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π —á–µ—Ä–µ–∑ Google Places API
"""

import os
import sys
import psycopg
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
project_root = Path(__file__).parent
sys.path.insert(0, str(project_root))

from apps.places.services.google_places import GooglePlaces

def fetch_missing_photos():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π —á–µ—Ä–µ–∑ Google Places API"""
    
    print("üì∏ –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π...")
    
    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –ë–î
    conn = psycopg.connect('postgresql://ep:ep@localhost:5432/ep')
    cursor = conn.cursor()
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –º–µ—Å—Ç–∞ –±–µ–∑ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π, –Ω–æ —Å Google Place ID
        cursor.execute('''
        SELECT id, name, gmaps_place_id, lat, lng
        FROM places 
        WHERE processing_status = 'summarized'
        AND (picture_url IS NULL OR picture_url = '')
        AND gmaps_place_id IS NOT NULL
        ORDER BY name
        ''')
        places = cursor.fetchall()
        
        print(f"üîç –ù–∞–π–¥–µ–Ω–æ {len(places)} –º–µ—Å—Ç –±–µ–∑ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π —Å Google Place ID")
        
        if not places:
            print("‚úÖ –í—Å–µ –º–µ—Å—Ç–∞ —É–∂–µ –∏–º–µ—é—Ç —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏!")
            return
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Google Places —Å–µ—Ä–≤–∏—Å
        google_service = GooglePlaces()
        
        updated_count = 0
        error_count = 0
        
        for i, (place_id, name, gmaps_place_id, lat, lng) in enumerate(places, 1):
            print(f"üîÑ {i}/{len(places)}: {name}")
            
            try:
                # –ü–æ–ª—É—á–∞–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ —á–µ—Ä–µ–∑ Google Places API
                photo_url = google_service.get_place_photos(gmaps_place_id)
                
                if photo_url:
                    # –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –≤ –ë–î
                    cursor.execute('''
                    UPDATE places 
                    SET picture_url = %s, updated_at = CURRENT_TIMESTAMP
                    WHERE id = %s
                    ''', (photo_url, place_id))
                    
                    print(f"   ‚úÖ –§–æ—Ç–æ –ø–æ–ª—É—á–µ–Ω–æ: {photo_url[:60]}...")
                    updated_count += 1
                else:
                    print(f"   ‚ö†Ô∏è –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
                    error_count += 1
                
            except Exception as e:
                print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
                error_count += 1
                continue
        
        # –ö–æ–º–º–∏—Ç–∏–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        conn.commit()
        
        print(f"\\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢–´:")
        print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ: {updated_count} –º–µ—Å—Ç")
        print(f"‚ùå –û—à–∏–±–æ–∫: {error_count} –º–µ—Å—Ç")
        print(f"üìà –£—Å–ø–µ—à–Ω–æ—Å—Ç—å: {updated_count/(updated_count+error_count)*100:.1f}%")
        
    except Exception as e:
        conn.rollback()
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
    finally:
        conn.close()

if __name__ == "__main__":
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º API –∫–ª—é—á
    if not os.getenv('GOOGLE_MAPS_API_KEY'):
        print("‚ùå –û—à–∏–±–∫–∞: GOOGLE_MAPS_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        sys.exit(1)
    
    print("üîë Google Maps API –∫–ª—é—á: —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    print("-" * 50)
    
    fetch_missing_photos()
