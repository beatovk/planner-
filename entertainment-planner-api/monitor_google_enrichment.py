#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ Google Places –æ–±–æ–≥–∞—â–µ–Ω–∏—è
"""

import time
import os
import sys
import psycopg
from datetime import datetime, timezone

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ PYTHONPATH –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∏–º–ø–æ—Ä—Ç–∞
project_root = os.path.abspath(os.path.join(os.path.dirname(__file__), '..'))
if project_root not in sys.path:
    sys.path.insert(0, project_root)

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
from dotenv import load_dotenv
load_dotenv(os.path.join(os.path.dirname(__file__), '.env'))

DB_URL = os.getenv("DATABASE_URL", "postgresql://ep:ep@localhost:5432/ep")

def get_enrichment_progress():
    """–ü–æ–ª—É—á–∞–µ—Ç —Ç–µ–∫—É—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å –æ–±–æ–≥–∞—â–µ–Ω–∏—è –º–µ—Å—Ç –∏–∑ –ë–î."""
    conn = None
    try:
        conn = psycopg.connect(DB_URL)
        cursor = conn.cursor()

        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –Ω–æ–≤—ã–º –º–µ—Å—Ç–∞–º Culture & Arts
        cursor.execute('''
        SELECT 
            COUNT(*) as total_places,
            COUNT(CASE WHEN lat IS NOT NULL AND lng IS NOT NULL THEN 1 END) as with_coords,
            COUNT(CASE WHEN gmaps_place_id IS NOT NULL THEN 1 END) as with_place_id,
            COUNT(CASE WHEN rating IS NOT NULL THEN 1 END) as with_rating,
            COUNT(CASE WHEN address IS NOT NULL THEN 1 END) as with_address,
            COUNT(CASE WHEN website IS NOT NULL THEN 1 END) as with_website,
            COUNT(CASE WHEN phone IS NOT NULL THEN 1 END) as with_phone,
            COUNT(CASE WHEN hours_json IS NOT NULL THEN 1 END) as with_hours
        FROM places 
        WHERE source = 'timeout_bangkok' 
        AND processing_status = 'summarized'
        ''')
        stats = cursor.fetchone()

        # –ü–æ—Å–ª–µ–¥–Ω–∏–µ 5 –æ–±–æ–≥–∞—â–µ–Ω–Ω—ã—Ö –º–µ—Å—Ç
        cursor.execute('''
        SELECT name, lat, lng, rating, address, updated_at
        FROM places 
        WHERE source = 'timeout_bangkok' 
        AND processing_status = 'summarized'
        AND lat IS NOT NULL AND lng IS NOT NULL
        ORDER BY updated_at DESC
        LIMIT 5
        ''')
        last_enriched = cursor.fetchall()

        return stats, last_enriched
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞: {e}")
        return None, []
    finally:
        if conn:
            conn.close()

def display_progress():
    """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ."""
    while True:
        os.system('clear')  # –û—á–∏—â–∞–µ–º —Ç–µ—Ä–º–∏–Ω–∞–ª
        print("üåç –ú–û–ù–ò–¢–û–†–ò–ù–ì GOOGLE PLACES –û–ë–û–ì–ê–©–ï–ù–ò–Ø")
        print("========================================\n")

        stats, last_enriched = get_enrichment_progress()
        
        if stats is None:
            print("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö")
            time.sleep(5)
            continue

        total_places, with_coords, with_place_id, with_rating, with_address, with_website, with_phone, with_hours = stats

        print(f"üé® –í—Å–µ–≥–æ –º–µ—Å—Ç Culture & Arts: {total_places}")
        print(f"üìç –° –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏: {with_coords}/{total_places} ({with_coords/total_places*100:.1f}%)")
        print(f"üÜî –° Place ID: {with_place_id}/{total_places} ({with_place_id/total_places*100:.1f}%)")
        print(f"‚≠ê –° —Ä–µ–π—Ç–∏–Ω–≥–æ–º: {with_rating}/{total_places} ({with_rating/total_places*100:.1f}%)")
        print(f"üè† –° –∞–¥—Ä–µ—Å–æ–º: {with_address}/{total_places} ({with_address/total_places*100:.1f}%)")
        print(f"üåê –° –≤–µ–±-—Å–∞–π—Ç–æ–º: {with_website}/{total_places} ({with_website/total_places*100:.1f}%)")
        print(f"üìû –° —Ç–µ–ª–µ—Ñ–æ–Ω–æ–º: {with_phone}/{total_places} ({with_phone/total_places*100:.1f}%)")
        print(f"üïí –° —á–∞—Å–∞–º–∏ —Ä–∞–±–æ—Ç—ã: {with_hours}/{total_places} ({with_hours/total_places*100:.1f}%)")

        if last_enriched:
            print(f"\nüéØ –ü–û–°–õ–ï–î–ù–ò–ï –û–ë–û–ì–ê–©–ï–ù–ù–´–ï –ú–ï–°–¢–ê:")
            for name, lat, lng, rating, address, updated_at in last_enriched:
                print(f"  - {name}")
                print(f"    üìç {lat:.6f}, {lng:.6f}")
                print(f"    ‚≠ê {rating}/5.0" if rating else "    ‚≠ê –ù–µ—Ç —Ä–µ–π—Ç–∏–Ω–≥–∞")
                print(f"    üè† {address[:50]}..." if address else "    üè† –ù–µ—Ç –∞–¥—Ä–µ—Å–∞")
                print(f"    üïí {updated_at.strftime('%H:%M:%S')}")
                print()
        else:
            print("\n–ù–µ—Ç –æ–±–æ–≥–∞—â–µ–Ω–Ω—ã—Ö –º–µ—Å—Ç.")

        print(f"\n–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ 3 —Å–µ–∫—É–Ω–¥—ã... (Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞)")
        time.sleep(3)

if __name__ == "__main__":
    display_progress()
