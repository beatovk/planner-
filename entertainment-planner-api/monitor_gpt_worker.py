#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ GPT –≤–æ—Ä–∫–µ—Ä–∞ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏.
–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–∞–∫–æ–µ –º–µ—Å—Ç–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –∏ –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É.
"""

import psycopg
import time
import os
from datetime import datetime

def monitor_gpt_worker():
    """–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ GPT –≤–æ—Ä–∫–µ—Ä–∞"""
    
    print("üîç –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ GPT –≤–æ—Ä–∫–µ—Ä–∞...")
    print("–ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞")
    print("=" * 60)
    
    try:
        while True:
            # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –ë–î
            conn = psycopg.connect('postgresql://ep:ep@localhost:5432/ep')
            cursor = conn.cursor()
            
            # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            cursor.execute('''
            SELECT processing_status, COUNT(*) 
            FROM places 
            WHERE description_full IS NOT NULL 
            AND description_full != '' 
            AND description_full != 'N/A'
            GROUP BY processing_status 
            ORDER BY processing_status
            ''')
            stats = cursor.fetchall()
            
            # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –º–µ—Å—Ç–∞
            cursor.execute('''
            SELECT name, processing_status, updated_at, summary
            FROM places 
            WHERE description_full IS NOT NULL 
            AND description_full != '' 
            AND description_full != 'N/A'
            AND processing_status = 'summarized'
            ORDER BY updated_at DESC 
            LIMIT 3
            ''')
            recent = cursor.fetchall()
            
            # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –º–µ—Å—Ç–æ –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ (–µ—Å–ª–∏ –µ—Å—Ç—å)
            cursor.execute('''
            SELECT name, processing_status, updated_at
            FROM places 
            WHERE description_full IS NOT NULL 
            AND description_full != '' 
            AND description_full != 'N/A'
            AND processing_status = 'new'
            ORDER BY updated_at ASC 
            LIMIT 1
            ''')
            current = cursor.fetchone()
            
            conn.close()
            
            # –û—á–∏—â–∞–µ–º —ç–∫—Ä–∞–Ω –∏ –≤—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
            os.system('clear' if os.name == 'posix' else 'cls')
            
            print(f"üïê {datetime.now().strftime('%H:%M:%S')} - –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ GPT –≤–æ—Ä–∫–µ—Ä–∞")
            print("=" * 60)
            
            # –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
            print("üìä –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
            total = 0
            for status, count in stats:
                status_emoji = {
                    'new': '‚è≥',
                    'summarized': '‚úÖ', 
                    'enriched': 'üîç',
                    'published': 'üöÄ',
                    'error': '‚ùå'
                }.get(status, '‚ùì')
                print(f"  {status_emoji} {status}: {count}")
                total += count
            
            print(f"üìà –í—Å–µ–≥–æ –º–µ—Å—Ç: {total}")
            
            # –¢–µ–∫—É—â–µ–µ –º–µ—Å—Ç–æ –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ
            if current:
                print(f"\nüîÑ –°–µ–π—á–∞—Å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è: {current[0]}")
                print(f"   –°—Ç–∞—Ç—É—Å: {current[1]}")
                print(f"   –û–±–Ω–æ–≤–ª–µ–Ω–æ: {current[2]}")
            else:
                print("\n‚úÖ –í—Å–µ –º–µ—Å—Ç–∞ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã!")
            
            # –ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –º–µ—Å—Ç–∞
            if recent:
                print(f"\nüéØ –ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –º–µ—Å—Ç–∞:")
                for i, (name, status, updated_at, summary) in enumerate(recent, 1):
                    summary_short = summary[:50] + "..." if summary and len(summary) > 50 else summary or "–ù–µ—Ç —Å–∞–º–º–∞—Ä–∏"
                    print(f"  {i}. {name}")
                    print(f"     üìù {summary_short}")
                    print(f"     ‚è∞ {updated_at}")
                    print()
            
            print("=" * 60)
            print("–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥... (Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞)")
            
            time.sleep(5)
            
    except KeyboardInterrupt:
        print("\n\nüëã –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞: {e}")

if __name__ == "__main__":
    monitor_gpt_worker()
