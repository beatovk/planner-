#!/usr/bin/env bash
set -Eeuo pipefail

cd "/Users/user/entertainment planner/entertainment-planner-api"

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
set -a
source .env
set +a

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–∞–∑—ã
check_db() {
    sqlite3 "$(echo $DATABASE_URL | sed 's/sqlite:\/\/\///')" "PRAGMA integrity_check;" | grep -q "ok"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –±–∞–∑—ã
restore_db() {
    echo "‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∞, –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é..."
    DB_PATH="$(echo $DATABASE_URL | sed 's/sqlite:\/\/\///')"
    BACKUP_PATH="${DB_PATH}.backup.$(date +%Y%m%d%H%M%S)"
    
    # –°–æ–∑–¥–∞–µ–º –±—ç–∫–∞–ø
    cp "$DB_PATH" "$BACKUP_PATH"
    
    # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–∑ SQL –¥–∞–º–ø–∞
    if [ -f "entertainment_clean.sql" ]; then
        rm -f "$DB_PATH"
        sqlite3 "$DB_PATH" < entertainment_clean.sql
        alembic upgrade head
        echo "‚úÖ –ë–∞–∑–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –∏–∑ SQL –¥–∞–º–ø–∞"
    else
        echo "‚ùå SQL –¥–∞–º–ø –Ω–µ –Ω–∞–π–¥–µ–Ω"
        exit 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö
clear_data() {
    echo "–û—á–∏—â–∞—é summary –∏ tags_csv..."
    python -c "
from apps.core.db import SessionLocal
from sqlalchemy import text
db = SessionLocal()
db.execute(text('''
UPDATE places SET 
    summary = NULL,
    tags_csv = NULL,
    interest_signals = NULL,
    processing_status = 'new',
    updated_at = NULL
'''))
db.commit()
result = db.execute(text('SELECT COUNT(*) FROM places WHERE processing_status = \"new\"')).scalar()
print(f'–ó–∞–ø–∏—Å–µ–π —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º new: {result}')
db.close()
"
}

# –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª
while true; do
    if ! check_db; then
        restore_db
        clear_data
    fi

    echo "üöÄ –ó–∞–ø—É—Å–∫–∞—é –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –≤–æ—Ä–∫–µ—Ä..."
    python -m apps.places.workers.gpt_normalizer
    echo "‚ö†Ô∏è  –í–æ—Ä–∫–µ—Ä –∑–∞–≤–µ—Ä—à–∏–ª—Å—è, –ø—Ä–æ–≤–µ—Ä—è—é –±–∞–∑—É..."
    sleep 5
done
