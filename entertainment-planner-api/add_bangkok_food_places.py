#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –º–µ—Å—Ç –∏–∑ Bangkok Food CSV —Ñ–∞–π–ª–∞ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
"""

import csv
import sys
import os
from datetime import datetime
from typing import List, Dict, Any

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from apps.core.db import SessionLocal
from apps.places.models import Place

def add_places_from_csv(csv_file_path: str) -> None:
    """–î–æ–±–∞–≤–ª—è–µ—Ç –º–µ—Å—Ç–∞ –∏–∑ CSV —Ñ–∞–π–ª–∞ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö"""
    
    db = SessionLocal()
    added_count = 0
    skipped_count = 0
    duplicate_count = 0
    
    try:
        with open(csv_file_path, 'r', encoding='utf-8') as file:
            reader = csv.DictReader(file)
            
            for row in reader:
                name = row.get('name', '').strip()
                description = row.get('description_full', '').strip()
                
                if not name or not description:
                    print(f"‚ö†Ô∏è  –ü—Ä–æ–ø—É—â–µ–Ω–æ: –ø—É—Å—Ç–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–ª–∏ –æ–ø–∏—Å–∞–Ω–∏–µ")
                    skipped_count += 1
                    continue
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –º–µ—Å—Ç–æ —Å —Ç–∞–∫–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º
                existing_place = db.query(Place).filter(Place.name == name).first()
                if existing_place:
                    print(f"‚ö†Ô∏è  –î—É–±–ª–∏–∫–∞—Ç: –º–µ—Å—Ç–æ '{name}' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç (ID: {existing_place.id})")
                    duplicate_count += 1
                    continue
                
                # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ –º–µ—Å—Ç–æ
                new_place = Place(
                    name=name,
                    description_full=description,
                    category="restaurant",  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ä–µ—Å—Ç–æ—Ä–∞–Ω
                    processing_status="new",
                    source="bangkok_food_csv",
                    source_url=f"bangkok_food_csv_{name.lower().replace(' ', '_')}",  # –£–Ω–∏–∫–∞–ª—å–Ω—ã–π URL
                    scraped_at=datetime.now()
                )
                
                db.add(new_place)
                db.commit()
                
                print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ: '{name}' (ID: {new_place.id})")
                added_count += 1
                
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ CSV: {e}")
        db.rollback()
        raise
    finally:
        db.close()
    
    print(f"\nüìä –ò—Ç–æ–≥–æ:")
    print(f"   –î–æ–±–∞–≤–ª–µ–Ω–æ: {added_count}")
    print(f"   –î—É–±–ª–∏–∫–∞—Ç–æ–≤: {duplicate_count}")
    print(f"   –ü—Ä–æ–ø—É—â–µ–Ω–æ: {skipped_count}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    csv_file_path = "../docs/places.csv/Bangkok_Food___Batch_06__100_restaurants__min_6_sentences__no_photos_.csv"
    
    if not os.path.exists(csv_file_path):
        print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {csv_file_path}")
        return
    
    print(f"üîÑ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –º–µ—Å—Ç –∏–∑ {csv_file_path}...")
    add_places_from_csv(csv_file_path)

if __name__ == "__main__":
    main()
