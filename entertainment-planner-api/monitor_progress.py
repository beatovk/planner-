#!/usr/bin/env python3
"""–°–∫—Ä–∏–ø—Ç –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏"""

import time
from apps.core.db import SessionLocal
from apps.places.models import Place
from sqlalchemy import func

def check_progress():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏"""
    db = SessionLocal()
    try:
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Å—Ç–∞—Ç—É—Å–∞–º
        status_stats = db.query(
            Place.processing_status,
            func.count(Place.id).label('count')
        ).group_by(Place.processing_status).all()
        
        print(f'üìä –ü–†–û–ì–†–ï–°–° –û–ë–†–ê–ë–û–¢–ö–ò - {time.strftime("%H:%M:%S")}:')
        for status, count in status_stats:
            print(f'  {status}: {count}')
        
        # –ü—Ä–æ—Ü–µ–Ω—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
        total = sum(count for _, count in status_stats)
        processed = sum(count for status, count in status_stats if status in ['summarized', 'error'])
        if total > 0:
            progress = (processed / total) * 100
            print(f'\nüìà –ü–†–û–ì–†–ï–°–°: {progress:.1f}% ({processed}/{total})')
            
            # –û—Ü–µ–Ω–∫–∞ –≤—Ä–µ–º–µ–Ω–∏
            if processed > 0:
                remaining = total - processed
                estimated_time = (remaining / 20) * 2  # 20 –º–µ—Å—Ç –≤ –±–∞—Ç—á–µ, ~2 –º–∏–Ω—É—Ç—ã –Ω–∞ –±–∞—Ç—á
                print(f'‚è±Ô∏è –û—Å—Ç–∞–ª–æ—Å—å –ø—Ä–∏–º–µ—Ä–Ω–æ: {estimated_time:.0f} –º–∏–Ω—É—Ç')
        
        return processed, total
        
    finally:
        db.close()

if __name__ == "__main__":
    print("üîÑ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏...")
    print("–ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")
    print()
    
    try:
        while True:
            processed, total = check_progress()
            print("-" * 50)
            
            if processed >= total:
                print("‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
                break
                
            time.sleep(30)  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
            
    except KeyboardInterrupt:
        print("\nüõë –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
